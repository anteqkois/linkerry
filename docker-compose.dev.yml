version: '3.9'

services:
  linkerry-redis:
    image: redis:alpine
    container_name: linkerry-redis
    env_file:
      - .env
    command: redis-server --appendonly yes --replica-read-only no --requirepass ${REDIS_PASSWORD}
    restart: always
    ports:
      - 4004:6379
    volumes:
      - redis:/data
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181
  #     - 9092:9092

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # kafka_ui:
  #   image: provectuslabs/kafka-ui:latest
  #   depends_on:
  #     - kafka
  #   ports:
  #     - 8090:8090
  #   environment:
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  # reverse-proxy:
  #   image: nginx:latest
  #   container_name: nginx_container
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./packages/config/nginx.conf:/etc/nginx/nginx.conf
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"

  # postgres:
  #   image: postgres:14
  #   environment:
  #     - POSTGRES_DB=mydb
  #     - POSTGRES_USER=test
  #     - POSTGRES_PASSWORD=test
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

volumes:
  # db_data:
  redis:
    driver: local
